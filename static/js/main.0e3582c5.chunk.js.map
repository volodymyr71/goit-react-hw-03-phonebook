{"version":3,"sources":["ContactForm/ContactForm.js","Filter/Filter.js","ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","state","name","number","handleSubmit","e","preventDefault","props","onSubmit","reset","handleChange","event","target","value","setState","className","this","id","uuidv4","onChange","placeholder","type","React","Component","Filter","filter","changeFilter","ContactList","contacts","deleteItemPhonebook","map","contact","onClick","App","addItemPhonebook","data","testIncludes","forEach","item","alert","newItem","prevState","itemId","currentTarget","localStorage","getItem","JSON","parse","setItem","stringify","filteredPhonebook","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e3582c5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass ContactForm extends React.Component {\r\n  state = { name: \"\", number: \"\" };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Phonebook_block\">\r\n        <form className=\"Phonebook_form\" onSubmit={this.handleSubmit}>\r\n          <p>Name</p>\r\n          <label id={uuidv4()}>\r\n            <input\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n              id={uuidv4()}\r\n              placeholder=\"Name\"\r\n            ></input>\r\n          </label>\r\n          <p>Number</p>\r\n\r\n          <label id={uuidv4()}>\r\n            <input\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              name=\"number\"\r\n              id={uuidv4()}\r\n              placeholder=\"Number\"\r\n            ></input>\r\n          </label>\r\n\r\n          <button className=\"Phonebook_block_button\" type=\"submit\">\r\n            Add contacts\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ filter, changeFilter }) => (\r\n  <div className=\"Phonebook_block\">\r\n    <p>Find contacts by name</p>\r\n    <label>\r\n      <input type=\"text \" value={filter} onChange={changeFilter}></input>\r\n    </label>\r\n  </div>\r\n);\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, deleteItemPhonebook }) => (\r\n  <div className=\"Phonebook_block\">\r\n    <p>ContactList</p>\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <li className=\"Phonebook_block_item\" key={contact.id}>\r\n          <p>\r\n            {contact.name} {contact.number}\r\n            <button\r\n              onClick={() => deleteItemPhonebook(contact.id)}\r\n              className=\"Phonebook_block_button\"\r\n            >\r\n              delete\r\n            </button>\r\n          </p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  deleteItemPhonebook: PropTypes.func.isRequired,\r\n};\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport Filter from \"./Filter/Filter\";\nimport ContactList from \"./ContactList/ContactList\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addItemPhonebook = (data) => {\n    if (data.name === \"\" || data.number === \"\") {\n      alert(\"need name & number\");\n      return;\n    }\n\n    let testIncludes = false;\n    this.state.contacts.forEach((item) => {\n      if (item.name === data.name) {\n        testIncludes = true;\n      }\n    });\n    if (testIncludes) {\n      alert(data.name + \" is alredy in contacts\");\n      return;\n    }\n\n    const newItem = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    };\n\n    this.setState((prevState) => ({\n      contacts: [newItem, ...prevState.contacts],\n    }));\n  };\n\n  deleteItemPhonebook = (itemId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((item) => item.id !== itemId),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem(\"contacts\") !== null) {\n      this.setState({ contacts: JSON.parse(localStorage.getItem(\"contacts\")) });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredPhonebook = contacts.filter((item) =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <div className=\"Phonebook\">\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.addItemPhonebook} />\n\n          <h2>Contacts</h2>\n          <Filter filter={filter} changeFilter={this.changeFilter} />\n          <ContactList\n            contacts={filteredPhonebook}\n            deleteItemPhonebook={this.deleteItemPhonebook}\n            // handleSubmit={this.handleSubmit}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}